import { Component } from 'react';
import "../../../css/Button.css";
interface IButtonProps {
    className?: string;
    onClick?: any;
    title?: string;
    children?: any;
    primary?: string;
    secondary?: string;
    disabled?: boolean;
}
export declare class Button extends Component<IButtonProps> {
    constructor(props: any);
    static defaultProps: {
        onClick: () => void;
    };
    onClickAction: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
interface IIconProps {
    icon?: string;
    size?: number;
    color?: string;
    onClick?: any;
    className?: string;
    fontSize?: number;
}
export declare class Icon extends Component<IIconProps> {
    constructor(props: any);
    static defaultProps: {
        size: number;
    };
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import '../../../css/Checkbox.css';
interface ICheckboxProps {
    value: boolean;
    onChange: Function;
    label: string;
    disabled: boolean;
    className: string;
    labelClassName: string;
    error: string;
}
export declare class Checkbox extends Component<ICheckboxProps> {
    static defaultProps: {
        onChange: () => void;
    };
    onChange: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import "../../../css/Input.css";
interface InputProps {
    value?: string;
    disabled?: boolean;
    autoFocus?: boolean;
    type?: string;
    placeholder?: string;
    error?: string;
    className?: string;
    min?: number;
    max?: number;
    maxLength?: number;
    onChange?: Function;
    onBlur?: Function;
}
export declare class Input extends Component<InputProps> {
    constructor(props: any);
    static defaultProps: {
        autoFocus: boolean;
        onChange: () => void;
        onBlur: () => void;
    };
    onEventChange: (e: any) => void;
    onEventBlur: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import '../../../css/Radio.css';
interface IRadioProps {
    name: string;
    label: string;
    disabled: boolean;
    value: boolean;
    error: string;
    onChange: Function;
    className: string;
    labelClassName: string;
}
export declare class Radio extends Component<IRadioProps> {
    onChange: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import "../../../css/Select.css";
interface ISelectProps {
    icon: string;
    value: any[];
    options: any[];
    disabled: boolean;
    placeholder: string;
    error: string;
    defaultValue?: any;
    onChange: Function;
    className: string;
}
export declare class Select extends Component<ISelectProps> {
    static defaultProps: {
        onChange: () => void;
        onBlur: () => void;
    };
    onEventChange: (e: any) => void;
    onEventBlur: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import '../../../css/Slider.css';
interface ISliderProps {
    disabled: boolean;
    value: string;
    min?: number;
    max?: number;
}
export declare class Slider extends Component<ISliderProps> {
    static defaultProps: {
        onChange: () => void;
    };
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import '../../../css/Switch.css';
interface ISwitchProps {
    value: boolean;
    size: number;
    onChange: Function;
    label: string;
    disabled: boolean;
    error: string;
    className: string;
    activeClassName: string;
}
export declare class Switch extends Component<ISwitchProps> {
    static defaultProps: {
        onChange: () => void;
        activeClassName: string;
    };
    onChange: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from 'react';
import '../../../css/Input.css';
interface ITextareaProps {
    value: string;
    disabled: boolean;
    rows: number;
    placeholder: string;
    onChange: Function;
    error: string;
    className: string;
}
export declare class Textarea extends Component<ITextareaProps> {
    static defaultProps: {
        onChange: () => void;
    };
    onChange: (e: any) => void;
    render(): JSX.Element;
}
export {};

import { Component } from "react";
import "../../../css/Modal.css";
interface IModalContainerProps {
    open: boolean;
    onClose: any;
    children: any;
    className?: string;
    onClick?: Function;
    renderToElement?: any;
    containerClassName?: string;
    overlayClassName?: string;
}
export declare class Modal extends Component<IModalContainerProps> {
    renderModal(): JSX.Element;
    render(): any;
}
export {};
